Java Identifiers
  https://www.geeksforgeeks.org/java-identifiers/
  
Data types in Java  
  https://www.geeksforgeeks.org/data-types-in-java/
  
enum in Java
  https://www.geeksforgeeks.org/enum-in-java/
  Enumerations serve the purpose of representing a group of named constants in a programming language.
  Enums are used when we know all possible values at compile time.
  In Java, we can also add variables, methods and constructors to it. 
  The main objective of enum is to define our own data types(Enumerated Data Types).
  Declaration of enum in java 
    Enum declaration can be done outside a Class or inside a Class but not inside a Method.
    First line inside enum should be list of constants and then other things like methods, variables and constructor.
  Important points of enum 
    Every enum internally implemented by using Class.
      /* internally above enum Color is converted to
      class Color
      {
           public static final Color RED = new Color();
           public static final Color BLUE = new Color();
           public static final Color GREEN = new Color();
      }*/
    Every enum constant represents an object of type enum.
    enum type can be passed as an argument to switch statement.
    Every enum constant is always implicitly public static final. Since it is static, we can access it by using enum Name. 
      Since it is final, we can’t create child enums.
    We can declare main() method inside enum. Hence we can invoke enum directly from the Command Prompt.
        enum Color 
        { 
            RED, GREEN, BLUE; 

            // Driver method 
            public static void main(String[] args) 
            { 
                Color c1 = Color.RED; 
                System.out.println(c1); 
            } 
        } 
  Enum and Inheritance 
    All enums implicitly extend java.lang.Enum class. As a class can only extend one parent in Java, so an enum cannot extend anything else.
    toString() method is overridden in java.lang.Enum class,which returns enum constant name.
    enum can implement many interfaces.
  values(), ordinal() and valueOf() methods 
  enum and constructor 
      enum can contain constructor and it is executed separately for each enum constant at the time of enum class loading.
      We can’t create enum objects explicitly and hence we can’t invoke enum constructor directly.
  enum and methods 
      enum can contain concrete methods only i.e. no any abstract method.
      
Enum with Customized Value in Java
  https://www.geeksforgeeks.org/enum-customized-value-java/
  
StringBuffer appendCodePoint() Method in Java with Examples
  https://www.geeksforgeeks.org/stringbuffer-appendcodepoint-method-in-java/
  public StringBuffer appendCodePoint(int cp)
  Parameters : The method accepts a single parameter cp of integer type and refers to the Unicode code point.
  Return Value : The method returns this object after appending the string represented by the codepoint.
  StringBuffer sbf = new StringBuffer("Geeksforgeeks"); 
  System.out.println("String buffer = " + sbf); //String buffer = Geeksforgeeks
  sbf.appendCodePoint(65); 
  System.out.println("After appending CodePoint is = " + sbf);//After appending CodePoint is = GeeksforgeeksA
  
Variables in Java
  https://www.geeksforgeeks.org/variables-in-java/ 
  int a = 10;
  datatype: Type of data that can be stored in this variable.
  variable_name: Name given to the variable.
  value: It is the initial value stored in the variable.
  Types of variables
  a.Local Variables
  b.Instance Variables
  c.Static Variables
Scope of Variables In Java  
  https://www.geeksforgeeks.org/variable-scope-in-java/
